version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix_pwd
      - POSTGRES_DB=zabbix
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:ubuntu-latest
    container_name: zabbix-server
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix_pwd
      - POSTGRES_DB=zabbix
    ports:
      - "10051:10051"
    depends_on:
      - postgres
    restart: always

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:ubuntu-latest
    container_name: zabbix-web
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix_pwd
      - POSTGRES_DB=zabbix
      - ZBX_SERVER_HOST=zabbix-server
      - PHP_TZ=America/New_York
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - zabbix-server
    restart: always

  zabbix-agent:
    image: zabbix/zabbix-agent:ubuntu-latest
    container_name: zabbix-agent
    environment:
      - ZBX_SERVER_HOST=zabbix-server
    privileged: true
    restart: always

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always

  checkmk:
    image: checkmk/check-mk-raw:latest
    container_name: checkmk
    ports:
      - "8081:5000"
    volumes:
      - checkmk_data:/omd/sites
    environment:
      - CMK_SITE_ID=cmk
      - CMK_PASSWORD=cmk123
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - zabbix-web
      - portainer
      - checkmk
    restart: always

volumes:
  postgres_data:
  portainer_data:
  checkmk_data: